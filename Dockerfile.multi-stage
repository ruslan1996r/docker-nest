# To speed up image creation, used multi-stage build
# Files and commands that depend on them are in order from rarely changed to frequently changed (from top to bottom)
# Yarn is also used to speed up performance because it installs node_modules in parallel instead of sequentially like npm
# Final build size 436MB

FROM node:18-alpine as appbuild
WORKDIR /usr/src/app
COPY package.json yarn.lock ./
COPY tsconfig.json tsconfig.build.json ./
RUN yarn install
COPY src ./src
RUN yarn run build

FROM node:18-alpine as production
WORKDIR /usr/src/app
COPY package.json yarn.lock ./
RUN yarn --production
COPY --from=appbuild /usr/src/app/dist ./
EXPOSE 3000
CMD yarn run start:prod
